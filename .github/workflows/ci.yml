# Copyright 2022 by Artem Ustsov
on: push

jobs:
  checking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: WORKING DIRECTORY
        run: pwd

      - name: INSTALL PIP
        run: |
          sudo apt-get update && sudo apt-get install -y python3-pip
          which python3
          which pip
      
      - name: INSTALL PEP8
        run: |
          sudo pip3 install pep8-naming

      - name: INSTALL FLAKE_8
        run: |
          sudo pip3 install flake8-bugbear
          sudo pip3 install flake8-builtins
          sudo pip3 install flake8-commas
          sudo pip3 install flake8-variables-names
          sudo pip3 install flake8-import-order

      - name: FLAKE_8 CHECK
        run: |
          flake8 main.py
          flake8 game
          flake8 unit_test.py
      
      - name: INSTALL PYLINT
        run: |
          sudo pip3 install pylint

      - name: PYLINT CHECK
        run: |
          pylint main.py
          pylint game
          pylint unit_test.py

  testing:
    runs-on: ubuntu-latest
    needs: [checking]
    steps:

      - uses: actions/checkout@v2
      - name: WORKING DIRECTORY
        run: pwd
      
      - name: INSTALL PIP
        run: |
          sudo apt-get update && sudo apt-get install -y python3-pip
          which python3
          which pip

      - name: RUN UNIT TESTS
        run: |
          python3 -m unittest unit_test.py
      
      - name: INSTALL COVERAGE
        run: |
          sudo pip3 install coverage
      
      - name: MAKE COVERAGE
        run: |
          coverage run unit_test.py
          coverage report -m

  #     - uses: codecov/codecov-action@v2
  #     - name: CODE COVERAGE
  #       run: |
  #         mkdir -p build && cd build
  #         sudo cmake -DBUILD_PARALLEL=OFF -DBUILD_TESTS=ON -DBUILD_STRESS_TEST=ON -DENABLE_COVERAGE=ON ..
  #         sudo make
  #         sudo ./ECG -i1 data.txt 10000 12
  #         cd unit_test
  #         sudo ./input_test
  #         sudo ./static_test
  #         cd ../
  #         cd stress_test
  #         sudo ./stress_test -i1 data.txt 10000 12
  #         cd ../
  #         sudo cmake -DBUILD_PARALLEL=ON -DBUILD_TESTS=ON -DBUILD_STRESS_TEST=ON -DENABLE_COVERAGE=ON ..
  #         sudo make
  #         cd unit_test
  #         sudo ./parallel_test
  #         cd ../
  #         lcov --directory . --capture --output-file coverage.info
  #         lcov --remove coverage.info '/usr/*' "${HOME}" '/.cache/*' --output-file coverage.info
  #         lcov --list coverage.info
  #         cd ..
  #         bash <(curl -s https://codecov.io/bash) -f build/coverage.info || echo "CodeCov didn't collect coverage reports"
  #         cat codecov.yml | curl --data-binary @- https://codecov.io/validate