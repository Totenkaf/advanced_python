# ==================== 1. Принцип единственной ответственности (SRP) ====================

"""
SRP: Каждый класс должен иметь только одну причину для изменения, 
то есть отвечать только за одну конкретную задачу.

Нарушение этого принципа приводит к:
- "Божественным классам", которые делают слишком много
- Трудностям в тестировании
- Проблемам при внесении изменений
"""


# Плохой пример (нарушение SRP)
class User:
    """Класс отвечает за хранение данных пользователя, работу с БД и отправку email - три ответственности!"""

    def __init__(self, name: str):
        self.name = name

    def get_name(self) -> str:
        return self.name

    def save(self, user: User):
        """Ответственность: работа с базой данных"""
        # Код сохранения в БД
        pass

    def send_email(self, message: str):
        """Ответственность: отправка email"""
        # Код отправки email
        pass


# Хороший пример (соблюдение SRP)
class User:
    """Только хранит данные пользователя - единственная ответственность"""

    def __init__(self, name: str):
        self.name = name

    def get_name(self) -> str:
        return self.name


class UserDB:
    """Отвечает только за операции с базой данных"""

    def save(self, user: User):
        """Сохраняет пользователя в БД"""
        # Код сохранения в БД
        pass


class EmailService:
    """Отвечает только за отправку email"""

    def send_email(self, user: User, message: str):
        """Отправляет email пользователю"""
        # Код отправки email
        pass
